air <- function(x){
y<-read.csv(x, header = T, stringsAsFactors = F)
y$지역 <- substr(y$지역, 1,2)
y <- y[y$지역 =="서울", ]
y <- y[ , c("측정일시", "주소", "PM10")]    # 필요한 열만 추출
colnames(y) <- c("날짜", "구", "미세먼지")
# 날짜 변환
y$날짜 <- substr(y$날짜, 1, 6)
y$날짜 <- as.integer(y$날짜)
# 구만 뽑기
gu<-strsplit(y$구, " ")
for(i in 1:length(gu)){
y$구[i] <-  gu[[i]][2]
}
# 구 데이터 정제
y$구 <- gsub("강서로45다길", "강서구",y$구)
y$구 <- gsub("강서로", "강서구",y$구)
df<-aggregate(미세먼지~날짜+구,y, mean)
return(df)
}
air <- function(x){
y<-read.csv(x, header = T, stringsAsFactors = F)
y$지역 <- substr(y$지역, 1,2)
y <- y[y$지역 =="서울", ]
y <- y[ , c("측정일시", "주소", "PM10")]    # 필요한 열만 추출
colnames(y) <- c("날짜", "구", "미세먼지")
# 날짜 변환
y$날짜 <- substr(y$날짜, 1, 6)
y$날짜 <- as.integer(y$날짜)
# 구만 뽑기
gu<-strsplit(y$구, " ")
for(i in 1:length(gu)){
y$구[i] <-  gu[[i]][2]
}
# 구 데이터 정제
y$구 <- gsub("강서로45다길", "강서구",y$구)
y$구 <- gsub("강서로", "강서구",y$구)
df<-aggregate(미세먼지~날짜+구,y, mean)
return(df)
}
head(y14_1)
y14_1
y14_1<-air("c:/r/미세먼지/2014년 1분기.csv")
head(y14_1)
y14_2<-air("c:/r/미세먼지/2014년 2분기.csv")
y14_3<-air("c:/r/미세먼지/2014년 3분기.csv")
y14_4<-air("c:/r/미세먼지/2014년 4분기.csv")
y15_1<-air("c:/r/미세먼지/2015년 1분기.csv")
y15_2<-air("c:/r/미세먼지/2015년 2분기.csv")
y15_3<-air("c:/r/미세먼지/2015년 3분기.csv")
y15_4<-air("c:/r/미세먼지/2015년 4분기.csv")
y16_1<-air("c:/r/미세먼지/2016년 1분기.csv")
y16_2<-air("c:/r/미세먼지/2016년 2분기.csv")
y16_3<-air("c:/r/미세먼지/2016년 3분기.csv")
y16_4<-air("c:/r/미세먼지/2016년 4분기.csv")
y17_1<-air("c:/r/미세먼지/2017년 1분기.csv")
y17_2<-air("c:/r/미세먼지/2017년 2분기.csv")
y17_3<-air("c:/r/미세먼지/2017년 3분기.csv")
test_data <- rbind(y14_1, y14_2, y14_3, y14_4,
y15_1, y15_2, y15_3, y15_4,
y16_1, y16_2, y16_3, y16_4)
real_data <- rbind(y17_1, y17_2, y17_3)
head(y14_1)
head(y14_2)
head(test_data)
head(real_data)
unique(test_data$구)
test_gu <- test_data[test_data$구 =="강서구", c("미세먼지")]
real_gu <- real_data[real_data$구 =="강서구", c("미세먼지")]
head(test_gu)
ts_gu <- ts(test_gu , frequency = 12 ,start = 2014)
ts_gu
test_gu
plot(ts_gu)
gnBest <- auto.arima(x= ts_gu)
library(forecast)
gnBest <- auto.arima(x= ts_gu)
ts_gu
auto.arima(x= ts_gu)
gnBest <- auto.arima(x= ts_gu)
gnBest
predict(gnBest, n.ahead = 9, se.fit = TRUE)
gnBest
forecast(object=gnBest, h = 9)
plot(fore)
# 예측 그래프
fore<- forecast(object=gnBest, h = 9)
plot(fore)
forecast(object=gnBest, h = 9)
fore
fore$mean
fore
fore$mean
as.vector(fore$mean)
pr1 <- as.vector(fore$mean)
pr1
for (i in 1:9) {
print( paste(i,"월: 약 " , round(abs(pr1 - real_gu)[i])," 차이" ,sep="")  )
}
for (i in 1:9) {
print( paste(i,"월: 약 " , round(abs(pr1 - real_gu)[i])," 차이" ,sep="")  )
}
for (i in 1:9) {
print( paste(i,"월: 약 " , abs(pr1 - real_gu)[i]," 차이" ,sep="")  )
}
## 실제값과 예측값의 차이 계산
fore$mean
fore
for (i in 1:9) {
print( paste(i,"월: 약 " , round(abs(pr1 - real_gu)[i])," 차이" ,sep="")  )
}
real_gu
fore$mean
real_gu
fore
gnBest
acf(gnBest$residuals)
pacf(gnBest$residuals)
gnBest
coef(gnBest)
for (i in 1:9) {
print( paste(i,"월: 약 " , round(abs(pr1 - real_gu)[i])," 차이" ,sep="")  )
}
pr <- as.vector(fore$mean)
for (i in 1:9) {
print( paste(i,"월: 약 " , round(abs(pr - real_gu)[i])," 차이" ,sep="")  )
}
fore
ts_gu
help(arima)
arima(ts_gu, order= c(0,0,0), seasonal = c(1,1,0))
auto.arima(ts_gu)
arima(ts_gu, order= c(0,0,0), seasonal = c(1,1,0))
ari <- arima(ts_gu, order= c(0,0,0), seasonal = c(1,1,0))
auto_ari <- auto.arima(ts_gu)
forecast(auto_ari, h=9)
forecast(gnBest, h = 9)
forecast(ari, h=9)
forecast(auto_ari, h=9)
forecast(ari, h=9)
for_autoari <- forecast(auto_ari, h=9)
for_ari <- forecast(ari, h=9)
for_auto <- forecast(auto_ari, h=9)
for_ari <- forecast(ari, h=9)
pr_auto <- as.vector(fore_auto$mean)
pr_auto <- as.vector(fore_auto$mean)
pr_auto
fore_auto
forecast(auto_ari, h=9)
forecast(ari, h=9)
for_auto <- forecast(auto_ari, h=9)
for_ari <- forecast(ari, h=9)
for_auto
pr_auto <- as.vector(fore_auto$mean)
pr_ari <- as.vector(fore_ari$mean)
pr_auto
fore_auto$mean
pr_auto <- as.vector(for_auto$mean)
pr_ari <- as.vector(for_ari$mean)
pr_auto
pr_ari
for (i in 1:9) {
print( paste(i,"월: 약 " , round(abs(pr_auto - real_gu)[i])," 차이" ,sep="")  )
}
for (i in 1:9) {
print( paste(i,"월: 약 " , round(abs(pr_ari - real_gu)[i])," 차이" ,sep="")  )
}
(5+31+5+10+14+3+1+19+6)/9
for (i in 1:9) {
print( paste(i,"월: 약 " , round(abs(pr_auto - real_gu)[i])," 차이" ,sep="")  )
}
for (i in 1:9) {
print( paste(i,"월: 약 " , round(abs(pr_ari - real_gu)[i])," 차이" ,sep="")  )
}
(5+31+5+10+14+3+1+19+6)/9
(1+25+1+13+18+1+4+15+9)/9
#양천구
1+31+7+4+11+5+5+16+8
1+31+7+4+11+5+5+16+8
#강서구
5+31+5+10+14+3+1+19+6
#양천구
(1+31+7+4+11+5+5+16+8)/9
#강서구
(5+31+5+10+14+3+1+19+6)/9
#양천구
(1+31+7+4+11+5+5+16+8)/9
#강서구
(5+31+5+10+14+3+1+19+6)/9
(9+6+4+22+5+8+5+19+6)/9
#강서구
(5+31+5+10+14+3+1+19+6)/9
(2+4+12+24+4+12+3+18+5)/9
(9+6+4+22+5+8+5+19+6)/9
jung <- data_h[data_h$구 =="중랑구", ]
air_h <- function(x){
y<-read.csv(x, header = T, stringsAsFactors = F)
y$지역 <- substr(y$지역, 1,2)
y <- y[y$지역 =="서울", ]
y <- y[ , c("측정일시", "주소", "PM10")]    # 필요한 열만 추출
colnames(y) <- c("날짜", "구", "미세먼지")
# 날짜 변환
y$날짜 <- as.integer(y$날짜)
# 구만 뽑기
gu<-strsplit(y$구, " ")
for(i in 1:length(gu)){
y$구[i] <-  gu[[i]][2]
}
# 구 데이터 정제
y$구 <- gsub("강서로45다길", "강서구",y$구)
y$구 <- gsub("강서로", "강서구",y$구)
df<-aggregate(미세먼지~날짜+구,y, mean)
return(df)
}
y14_1_h<-air_h("c:/r/미세먼지/2014년 1분기.csv")
y14_2_h<-air_h("c:/r/미세먼지/2014년 2분기.csv")
y14_3_h<-air_h("c:/r/미세먼지/2014년 3분기.csv")
y14_4_h<-air_h("c:/r/미세먼지/2014년 4분기.csv")
y15_1_h<-air_h("c:/r/미세먼지/2015년 1분기.csv")
y15_2_h<-air_h("c:/r/미세먼지/2015년 2분기.csv")
y15_3_h<-air_h("c:/r/미세먼지/2015년 3분기.csv")
y15_4_h<-air_h("c:/r/미세먼지/2015년 4분기.csv")
y16_1_h<-air_h("c:/r/미세먼지/2016년 1분기.csv")
y16_2_h<-air_h("c:/r/미세먼지/2016년 2분기.csv")
y16_3_h<-air_h("c:/r/미세먼지/2016년 3분기.csv")
y16_4_h<-air_h("c:/r/미세먼지/2016년 4분기.csv")
y17_1_h<-air_h("c:/r/미세먼지/2017년 1분기.csv")
y17_2_h<-air_h("c:/r/미세먼지/2017년 2분기.csv")
y17_3_h<-air_h("c:/r/미세먼지/2017년 3분기.csv")
data_h <-rbind(y14_1_h, y14_2_h, y14_3_h, y14_4_h,
y15_1_h, y15_2_h, y15_3_h, y15_4_h,
y16_1_h, y16_2_h, y16_3_h, y16_4_h,
y17_1_h, y17_2_h, y17_3_h)
jung <- data_h[data_h$구 =="중랑구", ]
jung$날짜 <- as.integer(substr(jung$날짜,9,10))
colnames(jung) <- c("time","구","미세먼지")
df<-aggregate(미세먼지~time , jung, mean)
library(ggplot2)
ggplot(df, aes(x= time, y= 미세먼지))+
geom_line()+
labs(title= "중랑구 시간대별 미세먼지 농도")
jung <- data_h[data_h$구 =="금천구", ]
jung$날짜 <- as.integer(substr(jung$날짜,9,10))
colnames(jung) <- c("time","구","미세먼지")
df<-aggregate(미세먼지~time , jung, mean)
library(ggplot2)
ggplot(df, aes(x= time, y= 미세먼지))+
geom_line()+
labs(title= "중랑구 시간대별 미세먼지 농도")
jung <- data_h[data_h$구 =="강남구", ]
jung$날짜 <- as.integer(substr(jung$날짜,9,10))
colnames(jung) <- c("time","구","미세먼지")
df<-aggregate(미세먼지~time , jung, mean)
library(ggplot2)
ggplot(df, aes(x= time, y= 미세먼지))+
geom_line()+
labs(title= "중랑구 시간대별 미세먼지 농도")
jung <- data_h[data_h$구 =="서초구", ]
jung$날짜 <- as.integer(substr(jung$날짜,9,10))
colnames(jung) <- c("time","구","미세먼지")
df<-aggregate(미세먼지~time , jung, mean)
library(ggplot2)
ggplot(df, aes(x= time, y= 미세먼지))+
geom_line()+
labs(title= "중랑구 시간대별 미세먼지 농도")
ggplot(df, aes(x= time, y= 미세먼지))+
geom_line()+
labs(title= "중랑구 시간대별 미세먼지 농도")
air_h <- function(x){
y<-read.csv(x, header = T, stringsAsFactors = F)
y$지역 <- substr(y$지역, 1,2)
y <- y[y$지역 =="서울", ]
y <- y[ , c("측정일시", "주소", "PM10")]    # 필요한 열만 추출
colnames(y) <- c("날짜", "구", "미세먼지")
# 날짜 변환
y$날짜 <- as.integer(y$날짜)
# 구만 뽑기
gu<-strsplit(y$구, " ")
for(i in 1:length(gu)){
y$구[i] <-  gu[[i]][2]
}
# 구 데이터 정제
y$구 <- gsub("강서로45다길", "강서구",y$구)
y$구 <- gsub("강서로", "강서구",y$구)
df<-aggregate(미세먼지~날짜+구,y, mean)
return(df)
}
y14_1_h<-air_h("c:/r/미세먼지/2014년 1분기.csv")
y14_1_h
air_h <- function(x){
y<-read.csv(x, header = T, stringsAsFactors = F)
y$지역 <- substr(y$지역, 1,2)
y <- y[y$지역 =="서울", ]
y <- y[ , c("측정일시", "주소", "PM10")]    # 필요한 열만 추출
colnames(y) <- c("날짜", "구", "미세먼지")
# 날짜 변환
y$날짜 <- as.integer(y$날짜)
# 구만 뽑기
gu<-strsplit(y$구, " ")
for(i in 1:length(gu)){
y$구[i] <-  gu[[i]][2]
}
# 구 데이터 정제
y$구 <- gsub("강서로45다길", "강서구",y$구)
y$구 <- gsub("강서로", "강서구",y$구)
df<-aggregate(미세먼지~날짜+구,y, mean)
return(df)
}
y14_1_h<-air_h("c:/r/미세먼지/2014년 1분기.csv")
y14_2_h<-air_h("c:/r/미세먼지/2014년 2분기.csv")
y14_3_h<-air_h("c:/r/미세먼지/2014년 3분기.csv")
y14_4_h<-air_h("c:/r/미세먼지/2014년 4분기.csv")
y15_1_h<-air_h("c:/r/미세먼지/2015년 1분기.csv")
y15_2_h<-air_h("c:/r/미세먼지/2015년 2분기.csv")
y15_3_h<-air_h("c:/r/미세먼지/2015년 3분기.csv")
y15_4_h<-air_h("c:/r/미세먼지/2015년 4분기.csv")
y16_1_h<-air_h("c:/r/미세먼지/2016년 1분기.csv")
y16_2_h<-air_h("c:/r/미세먼지/2016년 2분기.csv")
y16_3_h<-air_h("c:/r/미세먼지/2016년 3분기.csv")
y16_4_h<-air_h("c:/r/미세먼지/2016년 4분기.csv")
y17_1_h<-air_h("c:/r/미세먼지/2017년 1분기.csv")
y17_2_h<-air_h("c:/r/미세먼지/2017년 2분기.csv")
y17_3_h<-air_h("c:/r/미세먼지/2017년 3분기.csv")
data_h <-rbind(y14_1_h, y14_2_h, y14_3_h, y14_4_h,
y15_1_h, y15_2_h, y15_3_h, y15_4_h,
y16_1_h, y16_2_h, y16_3_h, y16_4_h,
y17_1_h, y17_2_h, y17_3_h)
jung <- data_h[data_h$구 =="중랑구", ]
jung$날짜 <- as.integer(substr(jung$날짜,9,10))
colnames(jung) <- c("time","구","미세먼지")
df<-aggregate(미세먼지~time , jung, mean)
library(ggplot2)
ggplot(df, aes(x= time, y= 미세먼지))+
geom_line()+
labs(title= "중랑구 시간대별 미세먼지 농도")
aggregate(미세먼지~time+구  ,data_h, mean)
head(data_h)
air_h <- function(x){
y<-read.csv(x, header = T, stringsAsFactors = F)
y$지역 <- substr(y$지역, 1,2)
y <- y[y$지역 =="서울", ]
y <- y[ , c("측정일시", "주소", "PM10")]    # 필요한 열만 추출
colnames(y) <- c("날짜", "구", "미세먼지")
# 날짜 변환
y$날짜 <- as.integer(substr(y$날짜, 9, 10))
# 구만 뽑기
gu<-strsplit(y$구, " ")
for(i in 1:length(gu)){
y$구[i] <-  gu[[i]][2]
}
# 구 데이터 정제
y$구 <- gsub("강서로45다길", "강서구",y$구)
y$구 <- gsub("강서로", "강서구",y$구)
df<-aggregate(미세먼지~날짜+구,y, mean)
return(df)
}
y14_1_h<-air_h("c:/r/미세먼지/2014년 1분기.csv")
head(data_h)
head(data_h)
air_h <- function(x){
y<-read.csv(x, header = T, stringsAsFactors = F)
y$지역 <- substr(y$지역, 1,2)
y <- y[y$지역 =="서울", ]
y <- y[ , c("측정일시", "주소", "PM10")]    # 필요한 열만 추출
colnames(y) <- c("날짜", "구", "미세먼지")
# 날짜 변환
y$날짜 <- as.integer(substr(y$날짜, 9, 10))
# 구만 뽑기
gu<-strsplit(y$구, " ")
for(i in 1:length(gu)){
y$구[i] <-  gu[[i]][2]
}
# 구 데이터 정제
y$구 <- gsub("강서로45다길", "강서구",y$구)
y$구 <- gsub("강서로", "강서구",y$구)
df<-aggregate(미세먼지~날짜+구,y, mean)
return(df)
}
y14_1_h<-air_h("c:/r/미세먼지/2014년 1분기.csv")
y14_2_h<-air_h("c:/r/미세먼지/2014년 2분기.csv")
y14_3_h<-air_h("c:/r/미세먼지/2014년 3분기.csv")
y14_4_h<-air_h("c:/r/미세먼지/2014년 4분기.csv")
y15_1_h<-air_h("c:/r/미세먼지/2015년 1분기.csv")
y15_2_h<-air_h("c:/r/미세먼지/2015년 2분기.csv")
y15_3_h<-air_h("c:/r/미세먼지/2015년 3분기.csv")
y15_4_h<-air_h("c:/r/미세먼지/2015년 4분기.csv")
y16_1_h<-air_h("c:/r/미세먼지/2016년 1분기.csv")
y16_2_h<-air_h("c:/r/미세먼지/2016년 2분기.csv")
y16_3_h<-air_h("c:/r/미세먼지/2016년 3분기.csv")
y16_4_h<-air_h("c:/r/미세먼지/2016년 4분기.csv")
y17_1_h<-air_h("c:/r/미세먼지/2017년 1분기.csv")
y17_2_h<-air_h("c:/r/미세먼지/2017년 2분기.csv")
y17_3_h<-air_h("c:/r/미세먼지/2017년 3분기.csv")
data_h <-rbind(y14_1_h, y14_2_h, y14_3_h, y14_4_h,
y15_1_h, y15_2_h, y15_3_h, y15_4_h,
y16_1_h, y16_2_h, y16_3_h, y16_4_h,
y17_1_h, y17_2_h, y17_3_h)
aggregate(미세먼지~time+구  ,data_h, mean)
head(data_h)
aggregate(미세먼지~time+구  ,data_h, mean)
aggregate(미세먼지~time+구, data_h, mean)
aggregate(미세먼지~날짜+구, data_h, mean)
aggregate(미세먼지~날짜+구, data_h, mean)
df_h <- aggregate(미세먼지~날짜+구, data_h, mean)
df_h
df
df
aggregate(미세먼지~날짜+구, data_h, mean)
df_h
air_h <- function(x){
y<-read.csv(x, header = T, stringsAsFactors = F)
y$지역 <- substr(y$지역, 1,2)
y <- y[y$지역 =="서울", ]
y <- y[ , c("측정일시", "주소", "PM10")]    # 필요한 열만 추출
colnames(y) <- c("시간", "구", "미세먼지")
# 시간 변환
y$시간 <- as.integer(substr(y$시간, 9, 10))
# 구만 뽑기
gu<-strsplit(y$구, " ")
for(i in 1:length(gu)){
y$구[i] <-  gu[[i]][2]
}
# 구 데이터 정제
y$구 <- gsub("강서로45다길", "강서구",y$구)
y$구 <- gsub("강서로", "강서구",y$구)
df<-aggregate(미세먼지~시간+구,y, mean)
return(df)
}
y14_1_h<-air_h("c:/r/미세먼지/2014년 1분기.csv")
y14_2_h<-air_h("c:/r/미세먼지/2014년 2분기.csv")
y14_3_h<-air_h("c:/r/미세먼지/2014년 3분기.csv")
y14_4_h<-air_h("c:/r/미세먼지/2014년 4분기.csv")
y15_1_h<-air_h("c:/r/미세먼지/2015년 1분기.csv")
y15_2_h<-air_h("c:/r/미세먼지/2015년 2분기.csv")
y15_3_h<-air_h("c:/r/미세먼지/2015년 3분기.csv")
y15_4_h<-air_h("c:/r/미세먼지/2015년 4분기.csv")
y16_1_h<-air_h("c:/r/미세먼지/2016년 1분기.csv")
y16_2_h<-air_h("c:/r/미세먼지/2016년 2분기.csv")
y16_3_h<-air_h("c:/r/미세먼지/2016년 3분기.csv")
y16_4_h<-air_h("c:/r/미세먼지/2016년 4분기.csv")
y17_1_h<-air_h("c:/r/미세먼지/2017년 1분기.csv")
y17_2_h<-air_h("c:/r/미세먼지/2017년 2분기.csv")
y17_3_h<-air_h("c:/r/미세먼지/2017년 3분기.csv")
data_h <-rbind(y14_1_h, y14_2_h, y14_3_h, y14_4_h,
y15_1_h, y15_2_h, y15_3_h, y15_4_h,
y16_1_h, y16_2_h, y16_3_h, y16_4_h,
y17_1_h, y17_2_h, y17_3_h)
########
df_h <- aggregate(미세먼지~시간+구, data_h, mean)
df_h
ggplot(df_h, aes(x=시간, y=미세먼지))+
geom_line()+
labs(title= "각 구별 시간대 미세먼지 농도")
df_h
ggplot(df_h, aes(x=시간, y=미세먼지, group=구, col= 구))+
geom_line()+
facet_wrap(~구)+
labs(title= "각 구별 시간대 미세먼지 농도")
str(df_h)
str(df_h)
ggplot(df_h, aes(x=시간, y=미세먼지, group=구, col= 구))+
geom_line()+
facet_wrap(~구)+
labs(title= "각 구별 시간대 미세먼지 농도")
str(df_h)
unique(df_h$시간)
ggplot(df_h, aes(x=시간, y=미세먼지, group=구, col= 구))+
geom_line()+
facet_wrap(~구)+
labs(title= "각 구별 시간대 미세먼지 농도")
